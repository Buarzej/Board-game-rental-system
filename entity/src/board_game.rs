//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "board_game")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub title: String,
    pub weight: u16,
    pub photo_filename: String,
    pub min_players: u8,
    pub max_players: u8,
    pub min_playtime: u16,
    pub max_playtime: u16,
    #[sea_orm(column_type = "Text", nullable)]
    pub additional_info: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::rental::Entity")]
    Rental,
    #[sea_orm(has_many = "super::rental_history::Entity")]
    RentalHistory,
}

impl Related<super::rental::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Rental.def()
    }
}

impl Related<super::rental_history::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RentalHistory.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
